name: Release from Master Branch

on:
  push:
    branches:
      - 'master'

jobs:

  test:
    name: Test - Units & Integrations
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.4
      - name: Maven Package
        run: mvn -B clean package -DskipTests
      - name: Maven Verify
        run: mvn -B clean verify -Pintegration-test

  sonar:
    name: SonarQube Scan
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.4
      - name: Maven Sonar
        run: mvn -B clean package sonar:sonar -DskipTests -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }} -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}
          
  push_artifact_to_registry:
    name: Publish - GitHub Packages
    runs-on: ubuntu-18.04
    needs: [test]

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.4
      - name: Publish artifact on GitHub Packages
        run: mvn -B clean deploy -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  push_image_to_registry:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v2
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: ${{github.repository}}/${{ secrets.REPO }}
          tag_with_ref: true
      - name: Run vulnerability scanner
        uses: aquasecurity/trivy-action@0.0.7
        with:
          image-ref: 'docker.pkg.github.com/${{github.repository}}/${{ secrets.REPO }}:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'


  deploy_to_test:
    name: Deploy App to Test Namespace
    runs-on: ubuntu-latest
    needs: [test, push_image_to_registry]
    steps:
    # Set the target k8s cluster.
    - uses: azure/k8s-set-context@v1
      with:
        method: kubeconfig
        kubeconfig: '${{ secrets.QA_KUBECONFIG }}'
      id: setcontext
        
    - uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: docker.pkg.github.com
        container-registry-username: ${{ github.actor }}
        container-registry-password: ${{ secrets.GITHUB_TOKEN }}
        secret-name: gitpackages-k8s-secret

    - uses: azure/k8s-deploy@v1
      with:
        namespace: ${{ secrets.QA_NAMESPACE }}
        manifests: |
          k8s-manifests/deployment.yml
          k8s-manifests/service.yml
          k8s-manifests/ingress.yml
        images: |
          docker.pkg.github.com/${{github.repository}}/${{ secrets.REPO }}:latest
        imagepullsecrets: |
          gitpackages-k8s-secret
